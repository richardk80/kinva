---
const { audiourl, audioinfo } = Astro.props;

const settings = {
  containerID: 'social-music-player',
  audioFilePath: audiourl,
  audioinfo: audioinfo
};
---

<!-- Start User Interface HTML -->
<div id={settings.containerID}
     data-audio-file-path={settings.audioFilePath}
     data-audio-info-file-path={settings.audioinfo}
     class="h-[59px] border-2 border-neutral-900">
      <div class="grid font-player grid-rows-1 grid-cols-5 mt-[8px] pb-1.5 px-2">
        <div class="bg-neutral-900 w-10 h-10">
          <button type="button" class="group h-10 w-10 antialiased subpixel-antialiased">
            <i class="mmp-icon fa-solid fa-play bg-white bg-text-clip text-transparent"></i>
          </button>
        </div>
            <div class="bg-neutral-900 text-white -ml-[9px] grid grid-cols-2 h-10 w-[237px] pointer-events-none">
                    <div class="flex flex-col my-auto min-w-56 pl-2 -space-y-0.5 font-player">
                        <div id="song-title" class="capitalize font-semibold block whitespace-nowrap antialiased subpixel-antialiased"></div>
                        <div id="artist-container" class="relative w-full overflow-hidden pt-[0.5px] antialiased subpixel-antialiased">
                            <span id="song-artist" class="uppercase font-normal block whitespace-nowrap"></span>
                        </div>
                    </div>
              </div>
            </div>
        <!-- Start Audio Player -->
            <audio id="audio-player" preload="auto" muted>
                <source src={settings.audioFilePath} type="audio/mpeg">
            </audio>
        <!-- End Audio Player -->
    </div>
<!-- End User Interface HTML -->

<style>
.fade {
  @apply player-fade;
}

.fade-out {
  @apply opacity-0;
}

.fade-in {
  @apply opacity-100;
}
</style>