---
import '../../styles/site-status.css';

import BubbleBox from "@com/main/BubbleBox.astro";
---
<BubbleBox 
    widthcss="w-[304px]" 
    name="Site Status" 
    name2="[view more]"
    loggedin
    pclass="flex items-center justify-between mx-2 text-xs font-semibold mt-0.5 flex flex-grow" 
    backgroundColor="bg-blue-200" 
    borderColor="border-blue-200" 
    aclass="text-[10px] -mt-0.5 font-normal hover:underline" 
    aurl="/status"
>
<div class="">
    <div class="uptime-container">
        <div id="statusIcon" class="uptime-header">
              <div>
                <span id="statusIconSymbol" style="color: #4CAF50;">&#x2714;</span> Website
              </div>
              <div class="uptime-percentage">
                <span id="uptimePercentage">Calculating...</span> uptime
              </div>
      </div>
  
      <div class="uptime-bar hidden" id="uptimeBar">
        <!-- Uptime blocks will be generated here -->
      </div>
    </div>
</div>
</BubbleBox>

<script>
// Fetch uptime data from the server
async function fetchUptimeData() {
  try {
    const response = await fetch('/api/uptime');
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    return data.uptimeData;
  } catch (error) {
    console.error('Error fetching uptime data:', error);
    return [];
  }
}

// Render the uptime bar, percentage, and icon
async function renderUptimeBar() {
  const uptimeData = await fetchUptimeData();
  const uptimeBar = document.getElementById('uptimeBar');
  const totalDays = uptimeData.length;
  const upDays = uptimeData.filter(status => status).length;
  const uptimePercentage = ((upDays / totalDays) * 100);

  // Set uptime percentage in UI
  const uptimePercentageElement = document.getElementById('uptimePercentage') as HTMLElement;
  const uptimePercentageContainer = document.querySelector('.uptime-percentage') as HTMLElement;
  uptimePercentageElement.textContent = `${uptimePercentage}%`;

  // Clear the bar before adding new elements
  uptimeBar.innerHTML = '';

  // Generate the blocks dynamically based on data
  uptimeData.forEach((status) => {
    const block = document.createElement('div');
    if (!status) {
      block.classList.add('down'); // Add class for downtime (red block)
    }
    uptimeBar.appendChild(block);
  });

  // Check if there was any downtime
  const hasDowntime = uptimeData.includes(false);

  // Update the icon based on uptime/downtime status
  const statusIconSymbol = document.getElementById('statusIconSymbol');
  if (hasDowntime) {
    // Set the red X if there was downtime
    statusIconSymbol.innerHTML = '&#x2716;';  // Red X
    statusIconSymbol.style.color = 'red';  // Change color to red

    // Change the percentage and the word "uptime" to red for downtime
    uptimePercentageContainer.style.color = 'red';
  } else {
    // Set the green check if all uptime
    statusIconSymbol.innerHTML = '&#x2714;';  // Green check
    statusIconSymbol.style.color = 'green';  // Change color to green

    // Change the percentage and the word "uptime" to green for uptime
    uptimePercentageContainer.style.color = 'green';
  }
}

// Render the uptime bar on page load
renderUptimeBar();
</script>