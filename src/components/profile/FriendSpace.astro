---
import RegularBox from '@com/main/RegularBox.astro';
import OtherProfileImage from "@com/main/OtherProfileImage.astro";
import { Icon } from 'astro-icon/components';
import users from '../../pages/api/users.json';

const { username } = Astro.params;

console.log('Username from URL:', username);
console.log('Users array:', users);

// Find the current user based on username
const currentUser = users.find(user => user.username === username);

console.log('Found user:', currentUser);

if (!currentUser) {
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
  return; // Prevent further execution
}

// Extract current user's information
const { name, loggedin, profilepic, profileimg, count } = currentUser;

// Convert count to a number if it isn't already
const peoplecount = Number(count);
const friendnum = peoplecount > 8 ? 8 : peoplecount;

console.log(peoplecount);

// Ensure 'name' is treated as an array if it's intended to be a list of names
const namesArray = Array.isArray(name) ? name : [name];

// Shuffle function to randomize the array
const shuffleArray = (array) => {
  let shuffledArray = array.slice(); // Copy the array to avoid mutating the original
  for (let i = shuffledArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]]; // Swap elements
  }
  return shuffledArray;
};

// Shuffle the names and select the first `friendnum` names
const shuffledNames = shuffleArray(namesArray).slice(0, friendnum);

// Get all users except the current user
const otherUsers = users.filter(user => user.username !== username);

console.log('Other users:', otherUsers);
---

<RegularBox
  username2={`${name}'s`} 
  name="Top 8" 
  name2="[view all]" 
  pclass="flex items-center justify-between mx-2 text-xs font-semibold text-red-600 mt-0.5" 
  backgroundColor="bg-orange-300/90" 
  borderColor="border-orange-300/90" 
  aclass="text-[10px] -mt-0.5 font-normal hover:underline text-zinc-950" 
  aurl={`/${username}/friends`}
>
  <p class={peoplecount === 0 ? "text-xs font-semibold ml-2 pt-1.5" : "text-xs font-semibold ml-2 pt-2"}>
    {name} has <span class="text-red-600">{peoplecount > 0 ? peoplecount : '0'}</span> 
    {peoplecount === 1 ? 'friend' : 'friends'}
  </p>

  <div class={peoplecount > 0 ? "grid grid-flow-dense grid-cols-4 gap-x-1 gap-y-2 pt-1 pb-0.5" : "grid grid-flow-dense grid-cols-4 pt-1"}>
    {otherUsers.slice(0, friendnum).map((user) => (
      <div class={peoplecount > 0 ? "pt-0.5 pb-2 px-1" : "py-0 px-1"}>
        <a href={`/${user.username}`} title={`Visit ${user.name}'s profile`}>
          <div class="flex items-center justify-center flex-col hover:underline text-xs font-semibold text-blue-600 hover:text-red-600">
            <p class="mb-0.5">{user.name}</p>
            {user.profilepic ? (
              <OtherProfileImage
                width={96}
                height={96}
                srcurl={user.profileimg}
                altText={`${user.name}'s profile picture`}
                titleText={`Visit ${user.name}'s profile`}
                loggedin={user.loggedin}
              />
            ) : (
              <div class="relative">
                <Icon class="w-[96px] h-[96px]" name="avatar" />
                {user.loggedin && (
                  <div class="absolute bottom-0 right-0 block w-[20px] h-[20px] rounded-full bg-green-500 border-[2px] border-white -mb-1 -mr-1"></div>
                )}
              </div>
            )}
          </div>
        </a>
      </div>
    ))}
  </div>
</RegularBox>
