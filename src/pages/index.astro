---
const userCookie = Astro.cookies.get('user');
const user = userCookie ? JSON.parse(userCookie.value) : null;
if (user) return Astro.redirect("/home");

import LoginLayout from '@lay/LoginLayout.astro';

import LoginNewUsers from '@com/main/LoginNewUsers.astro';
import LoginDivider from '@com/login/LoginDivider.astro';
import LoginBox from '@com/login/LoginBox.astro';

const username = 'dex';

import onlineusers from './api/users';

// Assuming `currentUsername` is passed as a prop or defined somewhere in your component
const currentUsername = 'dex'; // Replace this with the dynamic username, e.g., from props or state.

// Function to check if the user is logged in
const checkUserLoggedInStatus = (username) => {
  const currentUser = onlineusers.find(user => user.username === username);
  return currentUser ? currentUser.loggedin : false; // true if logged in, false otherwise
};

// Call the function with the dynamic username
const isLoggedIn = checkUserLoggedInStatus(currentUsername);

// Find the current user details
const currentUser = onlineusers.find(user => user.username === username);

// Check if the user has a profile picture
const hasProfilePic = currentUser ? currentUser.profilepic : false;
---
    <LoginLayout title="Login">
        <div class="grid grid-cols-12 grid-flow-row-dense mt-0.5">
            <div class="col-span-full">
                <div class="flex items-start justify-center">
                    <!-- Start LoginBox -->
                    <div class="grid grid-rows-1 gap-x-2">
                        <LoginBox />
                    </div>
                    <!-- End LoginBox -->
                </div>
            </div>
        </div>
    </LoginLayout>