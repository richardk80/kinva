---
import Layout from '@lay/Layout.astro';
import OtherProfileImage from "@com/main/OtherProfileImage.astro";

import { Icon } from 'astro-icon/components';

const filterItems = [
  { href: "/", smallname: "", firstcss: "text-blue-600 hover:text-red-600 font-semibold", secondcss: "text-blue-600 hover:text-red-600 ml-1 font-semibold hover:underline", name: "All Users", dividerCss: "ml-1 cursor-default font-medium text-xs", divider: "-" },
  { href: "/browse", smallname: "newusers", firstcss: "text-blue-600 hover:text-red-600 font-semibold", secondcss: "text-blue-600 hover:text-red-600 ml-1 hover:underline", name: "New Users", dividerCss: "ml-1 cursor-default font-medium text-xs", divider: "-" },
  { href: "/browse", smallname: "onlineusers", firstcss: "text-blue-600 hover:text-red-600 font-semibold", secondcss: "text-blue-600 hover:text-red-600 ml-1 hover:underline", name: "Online Users", dividerCss: "ml-1 cursor-default font-medium text-xs", divider: "" },
];

const friendItems = [
  { href: "/", smallname: "includefriends", firstcss: "text-blue-600 hover:text-red-600 font-semibold", secondcss: "text-blue-600 hover:text-red-600 ml-1 font-semibold hover:underline", name: "Include Friends", dividerCss: "ml-1 cursor-default font-medium text-xs", divider: "-" },
  { href: "/browse", smallname: "excludefriends", firstcss: "text-blue-600 hover:text-red-600 font-semibold", secondcss: "text-blue-600 hover:text-red-600 ml-1 hover:underline", name: "Exclude Friends", dividerCss: "ml-1 cursor-default font-medium text-xs", divider: "" },
];

const currentPath = new URL(Astro.request.url).pathname.slice(1);

// Get the 'page' query parameter
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page')) || 1;

import loggedin from '../pages/api/loggedin.json';

import profilepic from '../pages/api/profilepic.json';

// List of unique names (ensure there are at least 45)
const uniqueNames = [
  'Alex', 'Jordan', 'Taylor', 'Morgan', 'Jamie', 'Casey', 'Riley', 'Cameron', 'Drew', 'Parker',
  'Avery', 'Quinn', 'Sydney', 'Reese', 'Emerson', 'Hayden', 'Kai', 'Rowan', 'Blake', 'Charlie',
  'Harper', 'River', 'Skylar', 'Sawyer', 'Dakota', 'Phoenix', 'Tatum', 'Finley', 'Lennon', 'Remi',
  'Marley', 'Hunter', 'Sage', 'Dylan', 'Lane', 'Luca', 'Elliot', 'Ari', 'Toby', 'Noah', 'Micah', 'Spencer',
  'Richard', 'Thomas', 'Steve'
];

const availableNumbers = Array.from({ length: 45 }, (_, i) => i + 1);

const shuffleArray = (array) => {
  let shuffledArray = array.slice();
  for (let i = shuffledArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
  }
  return shuffledArray;
};

const shuffledNames = shuffleArray(uniqueNames);

const shuffledNumbers = shuffleArray(availableNumbers);

const getUniqueImageNumber = () => shuffledNumbers.pop();

const getUniqueName = () => shuffledNames.pop();

// Generate a URL for the next page
const nextPage = currentPage + 1;
const nextPageUrl = `/browse?page=${nextPage}`;

const users = Array.from({ length: 30 }, (_, i) => `user${i + 1}`);

const generateRandomProfileUrl = () => {
  const randomIndex = Math.floor(Math.random() * users.length);
  return `/${users[randomIndex]}`;
};
---
<Layout title="Browse">
    <div class="mx-[50px] mb-3">
      <h1 class="text-[25.6px] font-semibold mb-3 text-balance">Browse</h1>
      <div class="flex items-stretch text-xs mb-3">
        <p class="text-xs cursor-default font-semibold">Filter:</p>
        {filterItems.map((filter) => (
			<>
            <a href={filter.href} class={currentPath === filter.smallname ? filter.firstcss : filter.secondcss}>{filter.name}</a>
            <div class={filter.dividerCss}>{filter.divider}</div>
			</>
        ))}
      </div>
      <div class="flex items-stretch text-xs mb-3">
        <p class="text-xs cursor-default font-semibold">Friends:</p>
        {friendItems.map((friend) => (
			<>
            <a href={friend.href} class={currentPath === friend.smallname ? friend.firstcss : friend.secondcss}>{friend.name}</a>
            <div class={friend.dividerCss}>{friend.divider}</div>
			</>
        ))}
      </div>
      <div class="py-0.5 bg-orange-300/90">
        <div class="flex justify-between items-center mx-2">
          <p class="text-xs font-semibold mt-1 cursor-default">Active Users</p>
          <a class="text-[10.24px] hover:underline" href={generateRandomProfileUrl()}>[random]</a>
        </div>
      </div>
      <!-- Adjusted padding and margins to make borders closer to images -->
      <div class="border-2 border-orange-300/90"> 
        <div class="ml-2 mr-0.5 mb-2 mt-1.5">
			<div class="grid grid-cols-5 gap-x-[40px] gap-y-[10px]">
				{
				  [...Array(45)].map(() => {
					const randomImageNumber = getUniqueImageNumber();
					const randomName = getUniqueName();
					return (
					  <a class="text-blue-600 hover:text-red-600 hover:underline" href={`/${randomName.toLowerCase()}`} title={`Visit ${randomName}'s profile`}>
						<p class="text-xs flex justify-center font-semibold mb-0.5">{randomName}</p>
						<div>
						  { profilepic ?
                          <OtherProfileImage
                            width={96}
                            height={96}
                            srcurl={`https://i.pravatar.cc/96?img=${randomImageNumber}`}
                            altText={`${randomName}'s profile picture`}
                            loggedin={loggedin}
                          />
                         :
                        <div class="relative">
                          <Icon class="w-[96px] h-[96px]" name="avatar" />
                          { loggedin && <div class="absolute bottom-0 right-0 block w-[20px] h-[20px] rounded-full bg-green-500 border-[2px] border-white -mb-1 mr-[1px]"></div> }
                        </div>
                    }
						</div>
					  </a>
					);
				  })
				}
			  </div>
        </div>
      </div>
      <div class="flex items-center justify-between mt-3 mb-2">
        <a class="text-xs text-blue-600 hover:text-red-600 font-normal hover:underline" href="/invite">Invite your friends to join Hi Moot!</a>
          <button 
          type="button" 
          class="py-0.5 px-2 bg-gray-100 hover:bg-gray-200 text-xs border border-zinc-950 border-solid focus:outline-none" 
          aria-label="Next Page" 
          onclick=`window.location.href='${nextPageUrl}'`>
          Next Page
          </button>
      </div>
    </div>
</Layout>