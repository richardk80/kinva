---
import { Icon } from 'astro-icon';

import mainstyles from "../styles/main.css?raw";

import cookieconsent from "../styles/cookieconsent.css?raw";

import fontawesomecss from "../styles/css/all.min.css?raw";

import cookieconsentjs from "../scripts/cookieconsent.js?url";

import cookieconsentinit from "../scripts/cookieconsent-init.js?url";

interface Props {
  title?: string;
}

const { title } = Astro.props;

const loggedin = false;

const loggedin2 = true;

const home = "Home";

const loginname = "Login";

const loggedinwords = [loggedin ? `${loginname}` : `${home}`];

const navItems = [
  { smallname: "", href: "/", name: `${loggedinwords}`, dividerChar: "-" },
  { smallname: "browse", href: "/browse", name: "Browse", dividerChar: "-" },
  { smallname: "messages", href: "/messages", name: "Messages", dividerChar: "-" },
  { smallname: "blogs", href: "/blogs", name: "Blogs", dividerChar: "-" },
  { smallname: "bulletins", href: "/bulletins", name: "Bulletins", dividerChar: "-" },
  { smallname: "forums", href: "/forums", name: "Forums", dividerChar: "-" },
  { smallname: "groups", href: "/groups", name: "Groups", dividerChar: "-" },
  { smallname: "layouts", href: "/layouts", name: "Layouts", dividerChar: "-" },
  { smallname: "favorites", href: "/favorites", name: "Favorites", dividerChar: "-" },
  { smallname: "invite", href: "/invite", name: "Invite", dividerChar: "-" },
  { smallname: "help", href: "/help", name: "Help", dividerChar: "-" },
  { smallname: "contact", href: "/contact", name: "Contact", dividerChar: "" }
];

const getCssClasses = (isActive) => isActive ? "hover:text-black hover:underline font-semibold aria-current:underline" : "hover:text-black hover:underline";

const dividerCss = "text-white text-xs font-normal pl-[4px]";

const currentPath = new URL(Astro.request.url).pathname.slice(1);

const navFooterItems = [
  { smallname: "news", href: "/news", name: "News", dividerChar: "-" },
  { smallname: "updates", href: "/updates", name: "Updates", dividerChar: "-" },
  { smallname: "rules", href: "/rules", name: "Rules", dividerChar: "-" },
  { smallname: "press", href: "/press", name: "Press", dividerChar: "-" },
  { smallname: "brand", href: "/brand", name: "Brand", dividerChar: "-" },
  { smallname: "credits", href: "/credits", name: "Credits", dividerChar: "-" },
  { smallname: "feeds", href: "/feeds", name: "Feeds", dividerChar: "-" },
  { smallname: "terms", href: "/terms", name: "Terms", dividerChar: "-" },
  { smallname: "privacy", href: "/privacy", name: "Privacy", dividerChar: "-" },
  { smallname: "about", href: "/about", name: "About", dividerChar: "" }
];

const getCssFooterClasses = (isActive) => isActive ? "hover:text-red-600 hover:underline font-semibold aria-current:underline" : "hover:text-red-600 hover:underline";
const dividerFooterCss = "text-black text-xs font-medium";

const currentFooterPath = new URL(Astro.request.url).pathname.slice(1);
---

<html lang="en" class="c_darkmode antialiased subpixel-antialiased">
  <head>
    <title>{`${title} - Hi Moot`}</title>
    <link rel="canonical" href={Astro.site} />
    <meta charset="utf-8" />
    <link rel="icon shortcut" type="image/x-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={`${title} - Hi Moot`} />
    <meta name="generator" content={Astro.generator} />
    <style is:inline set:html={mainstyles}></style>
    <style is:inline set:html={fontawesomecss}></style>
    <style is:inline set:html={cookieconsent}></style>
    <script is:inline defer src={cookieconsentjs}></script>
    <script is:inline defer src={cookieconsentinit}></script>
    <script>import "preline/dist/preline.js";</script>
</head>
  <body>
    <div class="mx-auto w-[800px]">
      <div class="sticky inset-0 z-50">
        <header class="bg-blue-600 h-[40px]">
          <div class="flex items-center mx-1.5 mr-2 py-1">
              <a href="/" title="Back to Home">
                  <Icon class="h-[30px] w-auto fill-white" name="hmlogo" />
              </a>
              <div class="w-full ml-2 my-[0.5px]">
                  <form class="flex items-center space-x-1.5 form mt-0.5">
                      <input
                        type="text"
                        class="block h-6 pl-1 border border-stone-300 resize-none text-sm caret-black focus:outline-none placeholder:text-sm placeholder:italic placeholder:text-stone-400 bg-white w-52 -mt-0.5"
                        placeholder="Search..."
                        id="search"
                        name="q"
                        autocomplete="off"
                        title="Search by name or username"
                      />
                      <button
                        class="inline-flex flex-shrink-0 justify-center items-center h-6 px-2 border border-transparent bg-gray-50 hover:bg-gray-200 focus:outline-none focus:ring-0 focus:ring-transparent focus:ring-offset-0 transition-all -mt-0.5"
                        type="submit"
                        aria-label="search"
                      >
                        <div class="m-auto">
                          <Icon class="h-[14px] w-[14px] fill-black" name="search" />
                        </div>
                      </button>
                    </form>
              </div>
              <div class="-mt-0.5">
                  { 
                      loggedin2 ?
                      <button type="button" title="Logout of Hi Moot" aria-label="Logout of Hi Moot" class="text-[15px] flex items-center fill-white hover:underline text-white">Logout <Icon class="h-[15px] ml-2 mt-[0.5px]" name="logout" /></button>
                      : null 
                  }
              </div>
          </div>
      </header>
      <nav class="bg-blue-400 text-white drop-shadow-lg py-[3px] px-3">
          <ul class="flex items-stretch justify-between text-xs -mt-[1px] ml-1.5">
            {navItems.map(({ smallname, href, name, dividerChar }) => (
            <li>
              <a data-navitem class={getCssClasses(currentPath === smallname)} href={href} target="_self">{name}</a>
              <span class={dividerCss}>{dividerChar}</span>
            </li>
          ))}
          </ul>
        </nav>
      </div>
      <div class="inline-block w-full h-full bg-white">
        <div class="py-2 px-2">
          <slot />
        </div>
      </div>
      <div class="mt-3 mb-10">
        <footer>
          <div class="pb-2 flex justify-center">
            <div class="text-blue-600 text-[11px]">
              <ul class="flex items-stretch space-x-1">
                {navFooterItems.map(({ smallname, href, name,dividerChar }) => (
                <li>
                  <a data-navitem class={getCssFooterClasses(currentFooterPath === smallname)} href={href} target="_self">{name}</a>
                  <span class={dividerFooterCss}>{dividerChar}</span>
                </li>
              ))}
              </ul>
          </div>
          </div>
          <div class="pb-2 flex justify-center">
            <div class="text-[11px] flex items-center space-x-0.5">
              <p>Hi Moot</p>
              <p>Â©</p>
              <p>{ new Date().getFullYear() }</p>
          </div>
          </div>
        </footer>
      </div>
    </div>
    <button type="button" id="scrollTopButton" class="hidden fixed z-auto cursor-pointer inline-flex flex-shrink-0 justify-center items-center gap-2 h-8 w-8 border border-transparent font-semibold bg-blue-600 hover:bg-blue-500 focus:outline-none focus:ring-0 focus:ring-transparent focus:ring-offset-0 transition-all text-sm right-4 bottom-4 outline-none overflow-x-hidden overflow-y-auto" title="Back To Top" aria-label="Back To Top" role="button" tabindex="0">
      <Icon class="h-4 w-4 fill-white m-auto" name="arrow-up" />
    </button>
  </body>
</html>

<script>
  // @ts-nocheck
  import DOMPurify from "dompurify";
  const form = document.querySelector("form");
  form?.addEventListener("submit", (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const searchTerm = DOMPurify.sanitize(formData.get("q")?.toString());
    if (!searchTerm || searchTerm.length === 0) return;
    const url = new URL("/search", window.location.origin);
    url.searchParams.set("q", searchTerm);
    window.location.assign(url.toString());
  });

  const navItems = document.querySelectorAll(
    "[data-navitem]"
  ) as NodeListOf<HTMLAnchorElement>;

  navItems.forEach((link) => {
    if (window.location.href === link.href) {
      link.setAttribute("aria-current", "page");
    }
  });
  
  const scrollTopButton = document.getElementById('scrollTopButton');
  
  window.onscroll = function() {
    scrollFunction();
  };
  
  function scrollFunction() {
    if (document.body.scrollTop > 1 || document.documentElement.scrollTop > 1) {
      scrollTopButton.style.display = "block";
    } else {
      scrollTopButton.style.display = "none";
    }
  }
  
  // Attach click event listener using JavaScript
  scrollTopButton.addEventListener('click', function() {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });
</script>